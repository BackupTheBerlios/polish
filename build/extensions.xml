<!-- 
	extensions.xml defines all default extensions. 
	Use custom-extensions.xml for defining your own extensions.

    Copyright (c) 2005 Robert Virkus / Enough Software

    This file is part of J2ME Polish.

    J2ME Polish is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    J2ME Polish is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Foobar; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

    Commercial licenses are also available, please
    refer to the accompanying LICENSE.txt or visit
    http://www.j2mepolish.org for details.

-->

<extensions>

	<!-- type definitions -->
	<typedefinition>
		<name>loghandler</name>
		<defaultclass>de.enough.polish.log.DefaultLogHandler</defaultclass>
	</typedefinition>
	
	<typedefinition>
		<name>packager</name>
		<defaultclass>de.enough.polish.jar.ExternalPackager</defaultclass>
	</typedefinition>

    <!--
	<extension>
	    <type>plugin</type>
    	<name>mBooster</name>
	    <class>com.innaworks.mbooster.j2mepolish.MBoosterBuildPlugin</class>
    	<classpath>${polish.home}/import/mbooster.jar</classpath>
	</extension>
	-->
	
	<!-- Preprocessor -->
	
	<extension>
		<type>preprocessor</type>
		<name>polish</name>
		<class>de.enough.polish.preprocess.custom.PolishPreprocessor</class>
	</extension>
	
	
	<!-- Property Functions -->
	
	<extension>
		<type>propertyfunction</type>
		<name>nospace</name>
		<class>de.enough.polish.propertyfunctions.NoSpaceFunction</class>
	</extension>

	<extension>
		<type>propertyfunction</type>
		<name>uppercase</name>
		<class>de.enough.polish.propertyfunctions.UpperCaseFunction</class>
	</extension>
	
	<extension>
		<type>propertyfunction</type>
		<name>lowercase</name>
		<class>de.enough.polish.propertyfunctions.LowerCaseFunction</class>
	</extension>

	<extension>
		<type>propertyfunction</type>
		<name>bytes</name>
		<class>de.enough.polish.propertyfunctions.BytesFunction</class>
	</extension>

	<extension>
		<type>propertyfunction</type>
		<name>kilobytes</name>
		<class>de.enough.polish.propertyfunctions.KiloBytesFunction</class>
	</extension>
	
	<extension>
		<type>propertyfunction</type>
		<name>megabytes</name>
		<class>de.enough.polish.propertyfunctions.MegaBytesFunction</class>
	</extension>
	
	<extension>
		<type>propertyfunction</type>
		<name>gigabytes</name>
		<class>de.enough.polish.propertyfunctions.GigaBytesFunction</class>
	</extension>
	
	<extension>
		<type>propertyfunction</type>
		<name>replace</name>
		<class>de.enough.polish.propertyfunctions.ReplaceFunction</class>
	</extension>
	
	<extension>
		<type>propertyfunction</type>
		<name>classname</name>
		<class>de.enough.polish.propertyfunctions.ClassNameFunction</class>
	</extension>

	<extension>
		<type>propertyfunction</type>
		<name>number</name>
		<class>de.enough.polish.propertyfunctions.NumberFunction</class>
	</extension>

	<!-- Obfuscator -->
	
	<extension>
		<type>obfuscator</type>
		<name>RetroGuard</name>
		<class>de.enough.polish.obfuscate.RetroGuardObfuscator</class>
		<classpath>${polish.home}/import/retroguard.jar</classpath>
	</extension>

	<extension>
		<type>obfuscator</type>
		<name>ProGuard</name>
		<class>de.enough.polish.obfuscate.ProGuardObfuscator</class>
		<classpath>${polish.home}/import/proguard.jar</classpath>
	</extension>

	<extension>
		<type>obfuscator</type>
		<name>YGuard</name>
		<class>de.enough.polish.obfuscate.YGuardObfuscator</class>
		<classpath>${polish.home}/import/yguard-lib.jar</classpath>
	</extension>
	
	<extension>
		<type>obfuscator</type>
		<name>KlassMaster</name>
		<class>de.enough.polish.obfuscate.KlassMasterObfuscator</class>
		<classpath>${polish.home}/import/ZKM.jar:${wtk.home}/wtklib/kenv.zip</classpath>
	</extension>

	<extension>
		<type>obfuscator</type>
		<name>Dasho</name>
		<class>de.enough.polish.obfuscate.DashoObfuscator</class>
	</extension>
	
	<!-- Post Compiler -->
	
	<extension>
		<type>postcompiler</type>
		<name>floater</name>
		<class>de.enough.floater.FloaterPostCompiler</class>
		<classpath>${polish.home}/import/enough-floater.jar:${polish.home}/import/enough-floater-evaluation.jar</classpath>
	</extension>
	
	<extension>
		<type>postcompiler</type>
		<name>screenchanger</name>
		<class>de.enough.polish.postcompile.screenchange.ScreenChangerPostCompiler</class>
		<classpath>${polish.home}/import/asm-2.0.RC1.jar:${polish.home}/import/asm-tree-2.0.RC1.jar:${polish.home}/import/enough-bytecode.jar</classpath>
	</extension>
	
	<!-- Log Handler -->
	
	<extension>
		<type>loghandler</type>
		<name>rms</name>
		<clientClass>de.enough.polish.log.rms.RmsLogHandler</clientClass>
	</extension>
	
	<extension>
		<type>loghandler</type>
		<name>bluetooth</name>
		<clientClass>de.enough.polish.log.bluetooth.BluetoothLogHandler</clientClass>
	</extension>
	
	<!-- Packager -->
	<extension>
		<type>packager</type>
		<name>7zip</name>
		<class>de.enough.polish.jar.SevenZipPackager</class>
	</extension>

	<extension>
		<type>packager</type>
		<name>kzip</name>
		<class>de.enough.polish.jar.KZipPackager</class>
	</extension>
		

	<!-- Finalizer -->
	
	<extension>
		<type>finalizer</type>
		<name>sign</name>
		<class>de.enough.polish.finalize.SignFinalizer</class>
	</extension>
	
</extensions>