<!-- When you are using NetBeans 5, just rename this file     -->
<!-- to build.xml. You can then use the normal menu items     -->
<!-- run, debug, build and so forth from within NetBeans.     -->

<!-- This file controls the build process.                    -->
<!-- The most important target is the j2mepolish-target,      -->
<!-- which controls for what devices the application should   -->
<!-- be created and so on.                                    -->
<!--                                                          -->
<!-- Important: when you have no Wireless Toolkit installed   -->
<!-- you need to define the "preverify"-attribute             -->
<!-- of the <build>-element of the J2ME Polish task.          -->
<!--                                                          -->
<!-- When you call Ant from the command-line, you can         -->
<!-- call "ant test j2mepolish" to skip the obfuscation       -->
<!-- and to build the example for fewer handsets.             -->
<!-- The default target builds and obfuscates the example.    -->
<!--                                                          -->
<!-- The full documentation can be found at                   -->
<!-- http://www.j2mepolish.org                                -->
<!--                                                          -->
<!-- Have fun!                                                -->
<project 
	name="enough-j2mepolish-logviewer" 
	default="j2mepolish">
	
	<!-- extend the default NetBeans build script:           -->
	<import file="nbproject/build-impl.xml"/>
	
	<!-- import user specific properties                          -->
	<property file="${user.name}.properties" />
	
	<!-- The wtk.home property should point to the directory      -->
	<!-- containing the Wireless Toolkit.                         -->
	<property name="wtk.home" location="%{WTK_HOME}" />
	<!-- The polish.home property should point to the directory   -->
	<!-- containing the J2ME Polish installation.                 -->
	<property name="polish.home" location="%{INSTALL_PATH}" />
			
	<!-- The siemens.home, nokia.home and motorola.home-          -->
	<!-- properties can be necessary when their emulators         -->
	<!-- should be started.                                       -->
	<!-- The directory which contains the Siemens-SMTK
		<property name="siemens.home" location="C:\siemens" />
	-->
	<!-- The directory which contains the Nokia-emulators
		<property name="nokia.home" location="C:\Nokia" />
	-->
	<!-- The path to the Sony-Ericsson SDK
		<property name="sony-ericsson.home" location="C:\SonyEricsson\J2ME_SDK" />
	-->
	<!-- The directory which contains the Motorola-emulators
		<property name="motorola.home" location="C:\Program Files\Motorola\SDK v4.3 for J2ME" />
	-->

	<!-- Palm settings -->
	<!--
		The directory which contains the PalmSim.exe simulator:
		<property name="palm.simulator.home" location="C:\Program Files\Palm\Simulator" />
	-->
	<!--
		The directory which contains the Tools/bin/jartoprc.exe converter:
		<property name="palm.weme.home" location="C:\Program Files\Palm\WEME57" />
	-->
	<!-- BlackBerry settings -->
	<!--
		The directory which contains the BlackBerry JDE:
		<property name="blackberry.home" location="C:\Program Files\Research In Motion/BlackBerry JDE 4.0.2" />
	-->

	<!-- Definition of the J2ME Polish task:                      -->
	<taskdef name="j2mepolish" 
		classname="de.enough.polish.ant.PolishTask" 
		classpath="${polish.home}/import/enough-j2mepolish-build.jar:${polish.home}/import/jdom.jar"
	/>
	
		
	<!-- build targets, each target can be called via "ant [name]", 
		 e.g. "ant clean", "ant test j2mepolish" or just "ant" for calling the default-target -->
	
	<target name="setdeploy" 
		description="Call this target first to set the OTA download-URL, e.g. ant setdeploy j2mepolish"
		>
		<property name="deploy-url" value="http://www.company.com/download/" />
	</target>
	
	<target name="enableDebug" 
		description="Call this target first to skip the obfuscation step, call the emulator and start the debugger, e.g. ant enableDebug j2mepolish"
		>
		<property name="debug" value="true" />
	</target>
	
		
	<target name="test" 
		description="Call this target first to skip the obfuscation step and call the emulator, e.g. ant test j2mepolish"
		>
		<property name="test" value="true" />
		<property name="dir.work" value="build/test" />
	</target>
			
	<target name="j2mepolish-init"
		    depends="init"
		>
	  	<property name="test" value="false" />
		<property name="dir.work" value="build/real" />
		<property name="deploy-url" value="" />
	</target>
	 
	<!-- In this target the J2ME Polish task is used.             -->
	<!-- It has 3 sections:                                       -->
	<!--    1. The info-section defines some general information  -->
	<!--    2. The deviceRequirements-section chooses the devices -->
	<!--       for which the application is optimized.            -->
	<!--    3. The build-section controls the actual build        -->
	<!--       process.                                           -->	
	<target name="j2mepolish" 
			depends="j2mepolish-init"
			description="This is the controller for the J2ME build process." 
			>
		<j2mepolish>
		    <!-- general settings, these settings basically form the JAD-attributes. -->
		    <!-- Have a look at the <jad>-section for setting specialised attributes.
		         You can also define localized attributes in the resources/messages.txt files -->
			<info
				license="%{J2ME_POLISH_LICENSE}"
				name="J2ME Polish"
				version="1.3.4"
				description="A sample project"
				vendorName="Enough Software"
				infoUrl="http://www.j2mepolish.org"
				icon="dot.png"
				jarName="${polish.vendor}-${polish.name}-${polish.locale}-logviewer.jar" 
				jarUrl="${deploy-url}${polish.jarName}"
				copyright="Copyright 2005 Enough Software. All rights reserved."
			/>
			<!-- selection of supported devices -->
			<!-- In the test mode the application is build only for the  -->
			<!-- Generic/midp1 phone, but when the test-property is set to false, -->
			<!-- the second deviceRequirements will be used instead. -->
			<deviceRequirements if="test or enableCompilerMode">
				<requirement name="Name" value="${platform.device}" />
			</deviceRequirements>
			<deviceRequirements unless="test">
				<requirement name="Identifier" value="Sony-Ericsson/P900, Nokia/Series60, Nokia/Series60Midp2, Generic/midp2, Generic/midp1" />
				<!-- on could use other devices for real builds, e.g. :
				<or>
					<and>
						<requirement name="JavaPackage" value="nokia-ui" />
						<requirement name="BitsPerPixel" value="16+" />
					</and>
				</or>
				 -->
			</deviceRequirements>
		    <!-- build settings -->
			<!-- 
			 -->
			<build
				symbols="ExampleSymbol, AnotherExample"
				fullscreen="menu"
				usePolishGui="true"
				workDir="${dir.work}"
                compilerMode="${enableCompilerMode}"
                compilerDestDir="build/classes"
                compilerModePreverify="true"
			>
				<!-- midlets definition, NetBeans defines all MIDlets in the Ant property manifest.midlets:  -->
				<midlets definition="${manifest.midlets}" if="manifest.midlets:defined" />
				<midlets unless="manifest.midlets:defined">
					<midlet class="de.enough.polish.log.rms.LogViewerMidlet" name="Log Viewer"/>
				</midlets>
				<!-- project-wide variables - used for preprocessing.  -->
				<!-- You can set localized variables in the resources/messages.txt files as well.  -->
				<variables includeAntProperties="true" >
					<variable name="polish.classes.ApplicationInitializer" value="de.enough.polish.log.rms.LogViewerMidlet" />
					<variable name="polish.TextField.useDirectInput" value="true" unless="polish.hasPointerEvents" />
					<!--
					You need to change the polish.log.MIDletSuite and polish.log.Vendor
					preprocessing variables if you want to use the Logviewer for showing
					RMS logfiles of your application.
					See the readme.txt file for further explanations.
					-->
					<!-- example:
					<variable name="polish.log.MIDletSuite" value="Demonstrator" />
					<variable name="polish.log.Vendor" value="Enough Software" />
					-->
				</variables>
				<!-- Here you can set the dir attribute to "resources2" for an alternative design. -->
				<resources
					dir="resources"
					defaultexcludes="yes"
					excludes="readme.txt"
				>
					<localization locales="de_DE, en_US" unless="test" />
					<localization locales="en_US" if="test" />
				</resources>
				<!-- obfuscator settings: do not obfuscate when the test-property is true -->
				<obfuscator name="ProGuard" useDefaultPackage="true" unless="test" >
					<!--
					You can set additional parameters here, e.g.:
					<parameter name="optimize" value="false" />
					-->
				</obfuscator>
				<!-- debug settings: only include debug setting when the test-property is true -->
				<debug if="test" showLogOnError="true" verbose="true" level="error">
					<filter pattern="de.enough.polish.example.*" level="debug" />
					<filter pattern="de.enough.polish.ui.*" level="warn" />
				</debug>
				<!-- user defined JAD attributes can also be used: -->
				<jad>
					<attribute name="Nokia-MIDlet-Category" value="Game" if="polish.group.Series40" />
				</jad>	
				<!-- 
				   This is an example for signing MIDlets with J2ME Polish. 
				   You can set the password on the commandline by calling "ant -Dpassword=secret",
				   or by setting the Ant property above.
				   Signing is done only for MIDP/2.0 devices.
				-->
				<!--
				<sign
					key="SignMIDlet"
					keystore="midlets.ks"
					password="${password}"
					unless="test"
				/>
				-->
			</build>
			
			<!-- execution of emulator(s) -->
			<emulator
				wait="true"
				trace="class"
				securityDomain="trusted"
				enableProfiler="true"
				enableMemoryMonitor="true"
				enableNetworkMonitor="true"
				if="test and not debug"
				>
				<!--
				<parameter name="-Xjam" value="transient=http://localhost:8080/${polish.jadName}" />
				-->
			</emulator>
                        
			<emulator
				wait="true"
				trace="class"
				securityDomain="trusted"
				enableProfiler="false"
				enableMemoryMonitor="false"
				enableNetworkMonitor="false"
				if="debug"
				>
				<!-- Attach the emulator to the NetBeans debugger:	-->
				<debugger name="antcall" target="connect-debugger" port="6001" />
			</emulator>

		
		</j2mepolish>
	</target>
	
	<target 
		name="emulator"
		depends="test,j2mepolish"
		description="invokes the emulator"
	>
	</target>

	<target name="clean" 
	  		description="allows a clean build. You should call [ant clean] whenever you made changes to devices.xml, vendors.xml or groups.xml">
		<delete dir="build" />
		<delete dir="dist" includes="**/*" />
	</target>

	<target  
		name="cleanbuild"
		description="allows a clean build. You should call [ant cleanbuild] whenever you made changes to devices.xml, vendors.xml or groups.xml"
		depends="clean, j2mepolish"
	/>
	
    <target name="debug" description="debugs the project" depends="enableDebug, test, j2mepolish" />
	
	<target name="deploy"
			description="Deploys the applications. Currently empty."
			depends="j2mepolish"
	/>
	        

	        
	<!-- NetBeans specific build targets: -->
	        
	        <target name="run" 
	                depends="test, j2mepolish"
	        >
	        </target>

	        <target name="rebuild" 
	                depends="clean, j2mepolish"
	        >
	        </target>

	        <target name="rebuild-all" 
	                depends="clean, j2mepolish"
	        >
	        </target>
	        
	        <target name="jar" 
	                depends="j2mepolish"
	        >
	        </target>

	        <target name="jar-all" 
	                depends="j2mepolish"
	        >
	        </target>

	        <target name="clean-all" 
	                depends="clean"
	        >
	        </target>
	                
	        <target name="deploy-all" 
	                depends="deploy"
	        >
	        </target>
	        
	        <target name="enable-compiler-mode">
	            <property name="enableCompilerMode" value="true" />
	        </target>

	        <target name="compile-single" 
	                depends="enable-compiler-mode, j2mepolish"
	        >
	        </target>
	        
	    <target name="connect-debugger">
	        <echo message="using port ${polish.debug.port}" />
	        <property name="jpda.port" value="${polish.debug.port}" />
	        <antcall target="nbdebug"/>
	    </target>


</project>
