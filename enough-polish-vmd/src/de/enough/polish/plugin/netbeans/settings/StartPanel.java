/*
 * StartPanel.java
 *
 * Created on March 29, 2007, 10:51 AM
 */

package de.enough.polish.plugin.netbeans.settings;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author  dave
 */
public class StartPanel extends javax.swing.JPanel {
    
    private PropertyChangeSupport support = new PropertyChangeSupport (this);
    private boolean changed = false;
    
    /** Creates new form StartPanel */
    public StartPanel() {
        initComponents();
        homeText.getDocument().addDocumentListener(new DocumentListener () {
            public void insertUpdate(DocumentEvent e) {
                changedUpdate(null);
            }

            public void removeUpdate(DocumentEvent e) {
                changedUpdate(null);
            }

            public void changedUpdate(DocumentEvent e) {
                doNotAskCombo.setSelected(true);
                setChanged (true);
            }
        });
        doNotAskCombo.getModel().addChangeListener(new ChangeListener () {
            public void stateChanged(ChangeEvent arg0) {
                setChanged (true);
            }
        });
    }
    
    public void load () {
        homeText.setText(PolishSettings.getDefault().getPolishHome());
        doNotAskCombo.setSelected(PolishSettings.getDefault().isDoNotAskForPolishHome());
        setChanged (false);
    }
    
    public void store () {
        PolishSettings.getDefault().setProperties(homeText.getText(), doNotAskCombo.isSelected());
        setChanged (false);
    }
    
    public boolean isChanged () {
        return changed;
    }
    
    private void setChanged (boolean changed) {
        this.changed = changed;
        support.firePropertyChange(null, null, null);
    }
    
    public void addListener (PropertyChangeListener l) {
        support.addPropertyChangeListener(l);
    }
    
    public void removeListener (PropertyChangeListener l) {
        support.removePropertyChangeListener(l);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        homeText = new javax.swing.JTextField();
        doNotAskCombo = new javax.swing.JCheckBox();
        browseButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 12, 12, 12));
        setPreferredSize(new java.awt.Dimension(450, 100));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setDisplayedMnemonic('E');
        jLabel1.setLabelFor(homeText);
        jLabel1.setText(org.openide.util.NbBundle.getMessage(StartPanel.class, "StartPanel.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel1, gridBagConstraints);

        homeText.setText(org.openide.util.NbBundle.getMessage(StartPanel.class, "StartPanel.homeText.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(homeText, gridBagConstraints);

        doNotAskCombo.setMnemonic('D');
        doNotAskCombo.setText(org.openide.util.NbBundle.getMessage(StartPanel.class, "StartPanel.doNotAskCombo.text")); // NOI18N
        doNotAskCombo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        doNotAskCombo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        doNotAskCombo.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(doNotAskCombo, gridBagConstraints);

        browseButton.setMnemonic('B');
        browseButton.setText(org.openide.util.NbBundle.getMessage(StartPanel.class, "StartPanel.browseButton.text")); // NOI18N
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        add(browseButton, gridBagConstraints);

        jPanel1.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 439, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 24, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
    JFileChooser chooser = new JFileChooser ();
    chooser.setCurrentDirectory(new File (homeText.getText()));
    chooser.setDialogTitle("Select J2ME Polish Installation Directory");
    chooser.setMultiSelectionEnabled(false);
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
        File directory = chooser.getSelectedFile();
        if (directory != null)
            homeText.setText(directory.getAbsolutePath());
    }
}//GEN-LAST:event_browseButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JCheckBox doNotAskCombo;
    private javax.swing.JTextField homeText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
}
